@startuml
autonumber

actor "Collaborator" as COL
participant "MainSceneUI" as UI
participant "LoadTransactionController" as CTRL
participant "ShowListTransactionUI" as LISTUI
participant "MainApp" as APP
participant "platform:Platform" as PLAT
participant "freelancerRegister:FreelancerRegister" as RF
participant "m_OrganizationRegister:OrganizationRegister" as ORGREG
participant "org:Organization" as ORG
participant "m_transactionList:TransactionList" as TL
participant "result:list<Transaction>" as LISTTRAN
participant "listTasks:TaskList" as LTASK
participant "freelancerController:CreateFreelancerController" as FCTRL
participant "rt:RegisterTransaction" as RT
participant "transaction:Transaction" as TRAN
participant "listFreelancers:\n Set<Freelancer>" as LSTF
participant "task:Task" as TASK
participant "free:Freelancer" as FREE
participant "file:File" as FILE

activate COL

COL -> UI : ask to import to the system a file with transactions
activate UI
UI -> CTRL : createFileChooserTransaction()
activate CTRL
deactivate CTRL

UI --> COL : ask which file has to load
deactivate UI



COL -> UI : choose the file
activate UI
UI -> APP : platform=getPlatform()
activate APP
deactivate APP
UI -> PLAT : org=getOrganizationByUserEmail(email)
activate PLAT
PLAT -> PLAT : m_OrganizationRegister=getOrganizationRegister()
PLAT -> ORGREG :getOrganizationByUserEmail(email)
activate ORGREG
deactivate ORGREG
deactivate PLAT

UI -> ORG : result=read(file)
activate ORG
ORG -> TL : m_transactionList=read(file)
activate TL 
TL -> TL : tempList=ArrayList<Transaction>()
loop line in file
TL -> TASK : task=create(id,description,assignDuration,coustPerHour,category)
activate TASK
deactivate TASK
TL -> FREE : free=create(id,name,expertise,email,nif,bankAccount,address)
activate FREE
deactivate FREE
TL -> TRAN : transaction=create(id,endDate,delay,descWork,task,free)
activate TRAN
deactivate TRAN
TL -> TL : add(transaction)
end
deactivate TL 
deactivate ORG
deactivate UI

UI -> LISTUI : setListTransaction(result)
activate LISTUI
LISTUI -> TRAN : amount=amountToPaid()
activate TRAN
deactivate TRAN
LISTUI -> COL : show to collaborator the amount to be paid to every freelancer and ask to collaborator confirm the data
deactivate LISTUI

COL -> LISTUI : confirm the data
activate LISTUI
LISTUI -> ORG : addTransaction(transaction)
activate ORG
ORG -> TL : addTransaction(transaction)
activate TL
TL -> TL : validateTransaction(transaction)
TL -> TL : add(transaction)
deactivate TL
deactivate ORG

LISTUI -> COL : inform the collaborator the success of the operation
deactivate LISTUI

deactivate COL

@enduml
